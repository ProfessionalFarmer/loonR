library(loonR)
devtools::document()
library(loonR)
library(loonR)
pkgdown::build_site()
devtools::document()
library(loonR)
genereateLabelsByGroup(c("N","T", "M"), n.group, t.group, m.group)
genereateLabelsByGroup(c("N","T", "M"), n.group, t.group, m.group)
loonR::genereateLabelsByGroup(c("N","T", "M"), n.group, t.group, m.group)
n.group = c("N1", "N2", "N3", "N4")
t.group = c("T1", "T2")
m.group = c("M1", "M2", "M1")
loonR::genereateLabelsByGroup(c("N","T", "M"), n.group, t.group, m.group)
genereateLabelsByGroup <- function(label=NULL,...){
l = list(...)
if(is.null(label)){
stop("Please set labels which will be used as label")
}
if(length(l)!=length(label)){
stop("Please input vectors in order to generate labels. Number of vectors should be the same as element in labels")
}
label.list = lapply(1:length(l), function(x) {
g.labels <- rep( label[x], length(l[[x]])  )
names(g.labels) = l[[x]]
}
)
res = unlist(label.list)
#names(res) = unlist(l)
return( res )
}
genereateLabelsByGroup(c("N","T", "M"), n.group, t.group, m.group)
genereateLabelsByGroup <- function(label=NULL,...){
l = list(...)
if(is.null(label)){
stop("Please set labels which will be used as label")
}
if(length(l)!=length(label)){
stop("Please input vectors in order to generate labels. Number of vectors should be the same as element in labels")
}
label.list = lapply(1:length(l), function(x) {
g.labels <- rep( label[x], length(l[[x]])  )
names(g.labels) = l[[x]]
g.labels
}
)
#res = unlist(label.list)
#names(res) = unlist(l)
return( unlist(label.list) )
}
genereateLabelsByGroup(c("N","T", "M"), n.group, t.group, m.group)
library(loonR)
library(loonR)
library(loonR)
devtools::document()
